#!/bin/sh /etc/rc.common
#
# Copyright (C) 2015 OpenWrt-dist
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

START=30

CONFIG=mia

uci_get_by_type() {
	local index=0
	if [ -n "$4" ]; then
		index=$4
	fi
	local ret=$(uci get $CONFIG.@$1[$index].$2 2>/dev/null)
	echo ${ret:=$3}
}

add_rule(){
for i in $(seq 0 100)
do
	local enable=$(uci_get_by_type macbind enable '' $i)
	local macaddr=$(uci_get_by_type macbind macaddr '' $i)
	local timeon=$(uci_get_by_type macbind timeon '' $i)
	local timeoff=$(uci_get_by_type macbind timeoff '' $i)
	local z1=$(uci_get_by_type macbind z1 '' $i)
	local z2=$(uci_get_by_type macbind z2 '' $i)
	local z3=$(uci_get_by_type macbind z3 '' $i)
	local z4=$(uci_get_by_type macbind z4 '' $i)
	local z5=$(uci_get_by_type macbind z5 '' $i)
	local z6=$(uci_get_by_type macbind z6 '' $i)
	local z7=$(uci_get_by_type macbind z7 '' $i)
	[ "$z1" == "1" ] && Z1="monday,"
	[ "$z2" == "1" ] && Z2="tuesday,"
	[ "$z3" == "1" ] && Z3="wednesday,"
	[ "$z4" == "1" ] && Z4="thursday,"
	[ "$z5" == "1" ] && Z5="friday,"
	[ "$z6" == "1" ] && Z6="saturday,"
	[ "$z7" == "1" ] && Z7="sunday"
	if [ -z "$enable" ] || [ -z "$macaddr" ] || [ -z "$timeoff" ] || [ -z "$timeon" ]; then
		break
	fi
	if [ "$enable" == "1" ]; then
		nft add rule inet fw4 forward ether saddr $macaddr time start $timeon stop $timeoff weekdays \{$Z1$Z2$Z3$Z4$Z5$Z6$Z7\} counter drop
	fi
	for n in $(seq 1 7)
	do
		unset "Z$n"
	done
done
}

del_rule(){
	type=$1
	blackMacAdd=$(nft list table inet fw4 | grep -w ether saddr | awk '{print $4}')
	[ -n "$blackMacAdd" ] && {
		for macaddrb in $blackMacAdd
		do
			nft delete rule inet fw4 forward ether saddr $macaddrb
		done
	}
}

start(){
  stop
	enable=$(uci get mia.@basic[0].enable)
	[ $enable -eq 0 ] && exit 0
	nft add chain inet fw4 MIA { type filter hook forward priority 0\; }
  nft add rule inet fw4 input udp dport 53 counter comment "Rule For Control" jump MIA
  nft add rule inet fw4 input tcp dport 53 counter comment "Rule For Control" jump MIA
  nft add rule inet fw4 prerouting udp dport 53 redirect to 53 comment "Rule For Control"
  nft add rule inet fw4 prerouting tcp dport 53 redirect to 53 comment "Rule For Control"
	strict=$(uci get mia.@basic[0].strict)
  [ $strict -eq 1 ] && nft add rule inet fw4 forward counter comment "Rule For Control" jump MIA
  add_rule 
}
stop(){
	nft delete chain inet fw4 MIA 2>/dev/null
	nft delete rule inet fw4 input udp dport 53 counter comment "Rule For Control" jump MIA 2>/dev/null
	nft delete rule inet fw4 input tcp dport 53 counter comment "Rule For Control" jump MIA 2>/dev/null
	nft delete rule inet fw4 prerouting udp dport 53 redirect to 53 comment "Rule For Control" 2>/dev/null
	nft delete rule inet fw4 prerouting tcp dport 53 redirect to 53 comment "Rule For Control" 2>/dev/null
}
